---

- name: Setup test environment
  block:
    - name: Define test environment name and prefix
      set_fact:
        test_env_name: "ansible-conda-test-env"
        test_env_prefix: "{{ '/tmp/ansible-conda-test-prefix' }}"

- name: Run conda_env tests
  block:
    - name: 1. Check if environment exists (it should not)
      conda_env:
        name: "{{ test_env_name }}"
      register: result
      failed_when: result.failed or result.is_valid_env or result.prefix != "/opt/conda_env/{{ test_env_name }}"

    - name: 2. Create environment (check mode)
      conda_env:
        name: "{{ test_env_name }}"
        spec: "{{ lookup('file', 'environment.yml') | from_yaml }}"
      check_mode: yes
      register: result
      failed_when: not result.changed or result.failed or result.prefix != "/opt/conda_env/{{ test_env_name }}"

    - name: 3. Create environment (live mode)
      conda_env:
        name: "{{ test_env_name }}"
        spec: "{{ lookup('file', 'environment.yml') | from_yaml }}"
      register: result
      failed_when: not result.changed or result.failed or result.prefix != "/opt/conda_env/{{ test_env_name }}"

    - name: 4. Check if environment exists now (it should)
      conda_env:
        name: "{{ test_env_name }}"
      register: result
      failed_when: not result.is_valid_env or result.failed or result.prefix != "/opt/conda_env/{{ test_env_name }}"

    - name: 5. Update environment (no changes)
      conda_env:
        name: "{{ test_env_name }}"
        spec: "{{ lookup('file', 'environment.yml') | from_yaml }}"
      register: result
      failed_when: result.changed or result.failed or result.prefix != "/opt/conda_env/{{ test_env_name }}"

    - name: 6. Update environment (with changes)
      conda_env:
        name: "{{ test_env_name }}"
        spec:
          name: "{{ test_env_name }}"
          channels:
            - defaults
          dependencies:
            - python=3.12
            - pip
            - pandas  # New package
            - pip:
                - numpy
      register: result
      failed_when: not result.changed or result.failed or result.prefix != "/opt/conda_env/{{ test_env_name }}"

    - name: 7. Test with prefix - Create environment
      conda_env:
        prefix: "{{ test_env_prefix }}"
        spec: "{{ lookup('file', 'environment.yml') | from_yaml }}"
      register: result
      failed_when: not result.changed or result.failed or result.prefix != "{{ test_env_prefix }}"

  always:
    - name: Cleanup - Remove created environments and files
      block:
        - name: Remove named environment
          command: "rm /opt/conda_env/* -rf"
          changed_when: false
          failed_when: false

        - name: Remove prefixed environment
          command: "rm {{ test_env_prefix }} -rf"
          changed_when: false
          failed_when: false

        - name: Remove temporary spec file
          file:
            path: "{{ '/tmp/environment_updated.yml' }}"
            state: absent
          changed_when: false
